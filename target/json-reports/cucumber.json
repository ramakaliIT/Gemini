[
  {
    "line": 3,
    "elements": [
      {
        "line": 5,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:09.447Z",
        "before": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 43,
        "name": "TC_00004_user should be able to place places a successful order than places another order with the same client order id",
        "description": "",
        "id": "testing-the-client-order-id-boundary-values-in-neworder-module;tc-00004-user-should-be-able-to-place-places-a-successful-order-than-places-another-order-with-the-same-client-order-id;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "user enters a valid amount \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters a valid min_amount \"8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"8\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 19,
            "name": "user enters a valid price \"500\"",
            "match": {
              "arguments": [
                {
                  "val": "\"500\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 20,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid option \"immediate-or-cancel\"",
            "match": {
              "arguments": [
                {
                  "val": "\"immediate-or-cancel\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 472000000,
              "status": "passed"
            },
            "line": 27,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2436000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 33,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 196000000,
              "status": "passed"
            },
            "line": 34,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 35,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@client_order_id"
          },
          {
            "name": "@Positive"
          }
        ]
      },
      {
        "line": 5,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:12.751Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 44,
        "name": "TC_00004_user should be able to place places a successful order than places another order with the same client order id",
        "description": "",
        "id": "testing-the-client-order-id-boundary-values-in-neworder-module;tc-00004-user-should-be-able-to-place-places-a-successful-order-than-places-another-order-with-the-same-client-order-id;;3",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters a valid amount \"8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"8\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "user enters a valid min_amount \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "user enters a valid price \"250\"",
            "match": {
              "arguments": [
                {
                  "val": "\"250\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid option \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 175000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: {\"result\":\"error\",\"reason\":\"InvalidSymbol\",\"message\":\"Received unsupported symbol \u0027btceur\u0027\"} expected:\u003c200\u003e but was:\u003c400\u003e\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(PlaceNewBuyOrderSteps.java:139)\r\n\tat ✽.user verifies status code is 200(file:///C:/Users/ramaz/IdeaProjects/InterviewsFolder/GeminiTest01/src/test/resources/features/NewOrder/newbuyorder/newbuyorderClientOrderIdPositiveTest.feature:29)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 29,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@client_order_id"
          },
          {
            "name": "@Positive"
          }
        ]
      },
      {
        "line": 5,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:12.959Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 45,
        "name": "TC_00004_user should be able to place places a successful order than places another order with the same client order id",
        "description": "",
        "id": "testing-the-client-order-id-boundary-values-in-neworder-module;tc-00004-user-should-be-able-to-place-places-a-successful-order-than-places-another-order-with-the-same-client-order-id;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "user enters a valid amount \"6\"",
            "match": {
              "arguments": [
                {
                  "val": "\"6\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "user enters a valid min_amount \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "user enters a valid price \"125\"",
            "match": {
              "arguments": [
                {
                  "val": "\"125\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid option \"fill-or-kill\"",
            "match": {
              "arguments": [
                {
                  "val": "\"fill-or-kill\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 27,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 192000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 33,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 164000000,
              "status": "passed"
            },
            "line": 34,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 35,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@client_order_id"
          },
          {
            "name": "@Positive"
          }
        ]
      }
    ],
    "name": "testing the client order id boundary values in neworder module",
    "description": "",
    "id": "testing-the-client-order-id-boundary-values-in-neworder-module",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/NewOrder/newbuyorder/newbuyorderClientOrderIdPositiveTest.feature",
    "tags": [
      {
        "name": "@NewOrder",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@NewBuyOrder",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 11
        }
      },
      {
        "name": "@client_order_id",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 24
        }
      },
      {
        "name": "@Positive",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 42
        }
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:13.339Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 49,
        "name": "TC_0002_user places a successful order than fails to attemp another order with the old nonce",
        "description": "",
        "id": "us-0001-user-cant-place-a-successful-new-buy-order-with-invalid-nonce-and-invalid-client-order-id-credentials;tc-0002-user-places-a-successful-order-than-fails-to-attemp-another-order-with-the-old-nonce;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid symbol \"btcusd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"btcusd\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 19,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "user enters a valid amount \"17\"",
            "match": {
              "arguments": [
                {
                  "val": "\"17\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid min_amount \"8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"8\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 22,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 27,
            "name": "user enters a valid option \"immediate-or-cancel\"",
            "match": {
              "arguments": [
                {
                  "val": "\"immediate-or-cancel\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 32,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 188000000,
              "status": "passed"
            },
            "line": 35,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 36,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 39,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 40,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user verifies status code is 400, reason is \"InvalidNonce\" and message is \"has not increased\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 29
                },
                {
                  "val": "\"InvalidNonce\"",
                  "offset": 44
                },
                {
                  "val": "\"has not increased\"",
                  "offset": 74
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userVerifiesStatusCodeIsFailedstatuscodeReasonIsAnd(int,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          }
        ]
      },
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:13.818Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 50,
        "name": "TC_0002_user places a successful order than fails to attemp another order with the old nonce",
        "description": "",
        "id": "us-0001-user-cant-place-a-successful-new-buy-order-with-invalid-nonce-and-invalid-client-order-id-credentials;tc-0002-user-places-a-successful-order-than-fails-to-attemp-another-order-with-the-old-nonce;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 19,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "user enters a valid amount \"13\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid min_amount \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 23,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "user enters a valid option \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 183000000,
              "status": "passed"
            },
            "line": 35,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 36,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 39,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 40,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user verifies status code is 400, reason is \"InvalidNonce\" and message is \"has not increased\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 29
                },
                {
                  "val": "\"InvalidNonce\"",
                  "offset": 44
                },
                {
                  "val": "\"has not increased\"",
                  "offset": 74
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userVerifiesStatusCodeIsFailedstatuscodeReasonIsAnd(int,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          }
        ]
      },
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:14.207Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 87,
        "name": "TC_00003_user places a successful order than fails to attemp another order with a smaller nonce",
        "description": "",
        "id": "us-0001-user-cant-place-a-successful-new-buy-order-with-invalid-nonce-and-invalid-client-order-id-credentials;tc-00003-user-places-a-successful-order-than-fails-to-attemp-another-order-with-a-smaller-nonce;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 56,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 58,
            "name": "user enters a valid symbol \"btcusd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"btcusd\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 59,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 61,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 62,
            "name": "user enters a valid amount \"17\"",
            "match": {
              "arguments": [
                {
                  "val": "\"17\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 63,
            "name": "user enters a valid min_amount \"8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"8\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 64,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 65,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 66,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 68,
            "name": "user enters a valid option \"immediate-or-cancel\"",
            "match": {
              "arguments": [
                {
                  "val": "\"immediate-or-cancel\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 72,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 73,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 75,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 76,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 77,
            "name": "user enters a smaller nonce than previous",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersASmallerNonceThanPrevious()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 78,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 79,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "line": 80,
            "name": "user verifies status code is 400, reason is \"InvalidNonce\" and message is \"has not increased\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 29
                },
                {
                  "val": "\"InvalidNonce\"",
                  "offset": 44
                },
                {
                  "val": "\"has not increased\"",
                  "offset": 74
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userVerifiesStatusCodeIsFailedstatuscodeReasonIsAnd(int,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          }
        ]
      },
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:14.581Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 88,
        "name": "TC_00003_user places a successful order than fails to attemp another order with a smaller nonce",
        "description": "",
        "id": "us-0001-user-cant-place-a-successful-new-buy-order-with-invalid-nonce-and-invalid-client-order-id-credentials;tc-00003-user-places-a-successful-order-than-fails-to-attemp-another-order-with-a-smaller-nonce;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 56,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 58,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 59,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 61,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 62,
            "name": "user enters a valid amount \"38\"",
            "match": {
              "arguments": [
                {
                  "val": "\"38\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 63,
            "name": "user enters a valid min_amount \"7\"",
            "match": {
              "arguments": [
                {
                  "val": "\"7\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 64,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 65,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 66,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 68,
            "name": "user enters a valid option \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 70,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 72,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 185000000,
              "status": "passed"
            },
            "line": 73,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 75,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 76,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "user enters a smaller nonce than previous",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersASmallerNonceThanPrevious()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 78,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 182000000,
              "status": "passed"
            },
            "line": 79,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "line": 80,
            "name": "user verifies status code is 400, reason is \"InvalidNonce\" and message is \"has not increased\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 29
                },
                {
                  "val": "\"InvalidNonce\"",
                  "offset": 44
                },
                {
                  "val": "\"has not increased\"",
                  "offset": 74
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userVerifiesStatusCodeIsFailedstatuscodeReasonIsAnd(int,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          }
        ]
      },
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:14.991Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 89,
        "name": "TC_00003_user places a successful order than fails to attemp another order with a smaller nonce",
        "description": "",
        "id": "us-0001-user-cant-place-a-successful-new-buy-order-with-invalid-nonce-and-invalid-client-order-id-credentials;tc-00003-user-places-a-successful-order-than-fails-to-attemp-another-order-with-a-smaller-nonce;;4",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 56,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 58,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 59,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 61,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 62,
            "name": "user enters a valid amount \"29\"",
            "match": {
              "arguments": [
                {
                  "val": "\"29\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 63,
            "name": "user enters a valid min_amount \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"10\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 64,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 65,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 66,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 68,
            "name": "user enters a valid option \"immediate-or-cancel\"",
            "match": {
              "arguments": [
                {
                  "val": "\"immediate-or-cancel\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 72,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 167000000,
              "status": "passed"
            },
            "line": 73,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 75,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 77,
            "name": "user enters a smaller nonce than previous",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersASmallerNonceThanPrevious()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 78,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 180000000,
              "status": "passed"
            },
            "line": 79,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 80,
            "name": "user verifies status code is 400, reason is \"InvalidNonce\" and message is \"has not increased\"",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 29
                },
                {
                  "val": "\"InvalidNonce\"",
                  "offset": 44
                },
                {
                  "val": "\"has not increased\"",
                  "offset": 74
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userVerifiesStatusCodeIsFailedstatuscodeReasonIsAnd(int,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Nonce"
          },
          {
            "name": "@Negative"
          }
        ]
      }
    ],
    "name": "US_0001_User cant place a successful new buy order with invalid nonce and invalid client_order_id credentials",
    "description": "",
    "id": "us-0001-user-cant-place-a-successful-new-buy-order-with-invalid-nonce-and-invalid-client-order-id-credentials",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/NewOrder/newbuyorder/newbuyordernonce_negative_test.feature",
    "tags": [
      {
        "name": "@NewOrder",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@NewBuyOrder",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 11
        }
      },
      {
        "name": "@Nonce",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 24
        }
      },
      {
        "name": "@Negative",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 32
        }
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:15.369Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 43,
        "name": "TC_00001_As an admin, i must be able to place a buy order  with valid credentials",
        "description": "",
        "id": "users-should-be-able-to-place-buy-orders-with-valid-credentials;tc-00001-as-an-admin--i-must-be-able-to-place-a-buy-order--with-valid-credentials;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "user enters a valid amount \"17\"",
            "match": {
              "arguments": [
                {
                  "val": "\"17\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "user enters a valid min_amount \"8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"8\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "user enters a valid option \"immediate-or-cancel\"",
            "match": {
              "arguments": [
                {
                  "val": "\"immediate-or-cancel\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 33,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 347000000,
              "status": "passed"
            },
            "line": 34,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 37,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Positive"
          }
        ]
      },
      {
        "line": 6,
        "name": "user enters standard new buy order datas",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters new order fixed valid datas",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userEntersNewOrderFixedValidDatas()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-02T00:02:15.759Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.setUp()"
            }
          }
        ],
        "line": 44,
        "name": "TC_00001_As an admin, i must be able to place a buy order  with valid credentials",
        "description": "",
        "id": "users-should-be-able-to-place-buy-orders-with-valid-credentials;tc-00001-as-an-admin--i-must-be-able-to-place-a-buy-order--with-valid-credentials;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "user enters a valid APIKey \"apikey\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apikey\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPIKey(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enters a valid symbol \"random\"",
            "match": {
              "arguments": [
                {
                  "val": "\"random\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidSymbol(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "user enters a valid nonce 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_nonce(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enters a valid client order id \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 36
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_client_order_id(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "user enters a valid amount \"13\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "user enters a valid min_amount \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"5\"",
                  "offset": 31
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_min_amount(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user enters a valid price \"13650\"",
            "match": {
              "arguments": [
                {
                  "val": "\"13650\"",
                  "offset": 26
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_price(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "user enters a valid side \"buy\"",
            "match": {
              "arguments": [
                {
                  "val": "\"buy\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_side(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "user enters a valid type \"exchange limit\"",
            "match": {
              "arguments": [
                {
                  "val": "\"exchange limit\"",
                  "offset": 25
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidType(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "user enters a valid option \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 27
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_option(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "user enters a valid accountname \"primary\"",
            "match": {
              "arguments": [
                {
                  "val": "\"primary\"",
                  "offset": 32
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_enters_a_valid_accountname(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "user enters a valid APISecret \"apisecret\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apisecret\"",
                  "offset": 30
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.userEntersAValidAPISecret(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 33,
            "name": "system creates payload and signatures",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.system_creates_payload_and_signatures()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 168000000,
              "status": "passed"
            },
            "line": 34,
            "name": "user posts the new buy order request",
            "match": {
              "location": "steps.PlaceNewBuyOrderSteps.userPostsTheNewBuyOrderRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 37,
            "name": "user verifies status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 29
                }
              ],
              "location": "steps.PlaceNewBuyOrderSteps.user_verifies_status_code_is_statuscode(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NewOrder"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@NewBuyOrder"
          },
          {
            "name": "@Positive"
          }
        ]
      }
    ],
    "name": "Users should be able to place buy orders with valid credentials",
    "description": "  admins new buy order,new buy margin order but traders only new buy order",
    "id": "users-should-be-able-to-place-buy-orders-with-valid-credentials",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/NewOrder/newbuyorder/neworderbuypositivedatatest.feature",
    "tags": [
      {
        "name": "@NewOrder",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@NewBuyOrder",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 11
        }
      },
      {
        "name": "@Positive",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 25
        }
      }
    ]
  }
]